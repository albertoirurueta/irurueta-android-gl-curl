import java.text.SimpleDateFormat

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'org.jetbrains.dokka'
    id 'jacoco'
    id 'org.sonarqube'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.irurueta.android.gl.curl"
        minSdk 21
        targetSdk 33
        versionCode 3
        versionName "1.0.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        def buildNumber = System.getenv("BUILD_NUMBER") as Integer ?: 0
        buildConfigField("String", "BUILD_NUMBER", '"' + buildNumber.toString() + '"')
        def dateFormatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss")
        buildConfigField("String", "BUILD_TIMESTAMP", '"' + dateFormatter.format(new Date()) + '"')
        def gitCommit = System.getenv("GIT_COMMIT") as String ?: ""
        buildConfigField("String", "GIT_COMMIT", '"' + gitCommit + '"')

        def gitBranch = System.getenv("GIT_BRANCH") as String ?: ""
        buildConfigField("String", "GIT_BRANCH", '"' + gitBranch + '"')

        def apkPrefixLabels = ['glcurl', versionName, buildNumber]
        archivesBaseName = apkPrefixLabels.findAll { it != "" }.join('-')
    }

    buildTypes {
        debug {
            testCoverageEnabled true

            buildConfigField("String", "APP_BUILD_TYPE", '"debug"')
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField("String", "APP_BUILD_TYPE", '"release"')
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    namespace 'com.irurueta.android.gl.curl'
}

jacoco {
    toolVersion = "$jacoco_version"
}

sonarqube {
    properties {
        property "sonar.projectKey", "albertoirurueta_irurueta-android-gl-curl"
        property "sonar.projectName", "irurueta-android-gl-curl-$project.name"
        property "sonar.organization", "albertoirurueta-github"
        property "sonar.host.url", "https://sonarcloud.io"

        property "sonar.tests", ["src/test/java"]
        property "sonar.test.inclusions", ["**/*Test*/**", "src/androidTest/**", "src/test/**"]
        property "sonar.test.exclusions", ["**/*Test*/**", "src/androidTest/**", "src/test/**"]
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.sources", "src/main/java"
        property "sonar.exclusions", '**/*Test*/**,' +
                '*.json,' +
                '**/*test*/**,' +
                '**/.gradle/**,' +
                '**/R.class'

        def libraries = project.android.sdkDirectory.getPath() + "/platforms/android-30/android.jar"
        property "sonar.libraries", libraries
        property "sonar.java.libraries", libraries
        property "sonar.java.test.libraries", libraries
        property "sonar.binaries", "build/intermediates/javac/debug/classes,build/tmp/kotlin-classes/debug"
        property "sonar.java.binaries", "build/intermediates/javac/debug/classes,build/tmp/kotlin-classes/debug"

        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/coverage/androidTest/debug/report.xml"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.junit.reportsPath", "build/test-results/testDebugUnitTest"
        property "sonar.android.lint.report", "build/reports/lint-results.xml"
    }
}

dependencies {
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation("com.irurueta:irurueta-android-glutils:$irurueta_android_glutils_version")
    implementation project(':lib')
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$ext_junit_version"
}
